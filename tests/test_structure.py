import pytest
import sympy
from src.oct_ase import (
    ase_atoms_to_oct_structure,
    evaluate_expressions,
    parse_oct_input,
    parse_oct_structure_to_atoms,
    write_octopus_input,
)


@pytest.fixture()
def struct_input() -> str:
    input = """
    PeriodicDimensions = 2
    BoxShape = parallelepiped
    KPointsUseSymmetries = no
    a = 10.26120

    %LatticeParameters
    a/sqrt(2) | a/sqrt(2) | a
    %

    %LatticeVectors
    1.0 | 0.0 | 0.0
    0.0 | 1.0 | 0.0
    0.0 | 0.0 | 10.0
    %

    %Spacing
    0.45 | 0.45 | 0.35
    %

    %KPointsGrid
    2 | 2 | 1
    %
    %Coordinates
    "H"  | -7.614776392008550e+00 | 0.000000000000000e+00 | -3.108956374400000e+01
    "H"  | -3.268869762658550e+00 | 0.000000000000000e+00 | -3.108956374400000e+01
    "Si" | -5.441823077333550e+00 | 0.000000000000000e+00 | -2.933590080400000e+01
    "Si" | -5.441823077333550e+00 | 3.627882051555700e+00 | -2.684439934300000e+01
    "Si" | -1.813941025777850e+00 | 3.627882051555700e+00 | -2.430715492340000e+01
    "Si" | -1.813941025777850e+00 | 0.000000000000000e+00 | -2.177268432930000e+01
    "Si" | -5.441823077333551e+00 | 0.000000000000000e+00 | -1.923975000000000e+01
    "Si" | -5.441823077333551e+00 | 3.627882051555701e+00 | -1.667445000000000e+01
    "Si" | -1.813941025777851e+00 | 3.627882051555701e+00 | -1.410915000000000e+01
    "Si" | -1.813941025777851e+00 | 0.000000000000000e+00 | -1.154385000000000e+01
    "Si" | -5.441823077333551e+00 | 0.000000000000000e+00 | -8.978549999999998e+00
    "Si" | -5.441823077333551e+00 | 3.627882051555701e+00 | -6.413250000000000e+00
    "Si" | -1.813941025777851e+00 | 3.627882051555701e+00 | -3.847949999999999e+00
    "Si" | -1.813941025777851e+00 | 0.000000000000000e+00 | -1.282649999999999e+00
    "Si" | -5.441823077333551e+00 | 0.000000000000000e+00 | 1.282650000000001e+00
    "Si" | -5.441823077333551e+00 | 3.627882051555701e+00 | 3.847950000000001e+00
    "Si" | -1.813941025777851e+00 | 3.627882051555701e+00 | 6.413250000000001e+00
    "Si" | -1.813941025777851e+00 | 0.000000000000000e+00 | 8.978550000000002e+00
    "Si" | -5.441823077333551e+00 | 0.000000000000000e+00 | 1.154385000000000e+01
    "Si" | -5.441823077333551e+00 | 3.627882051555701e+00 | 1.410915000000000e+01
    "Si" | -1.813941025777851e+00 | 3.627882051555701e+00 | 1.667445000000000e+01
    "Si" | -1.813941025777851e+00 | 0.000000000000000e+00 | 1.923975000000000e+01
    "Si" | -5.441823077333550e+00 | 0.000000000000000e+00 | 2.177268432930000e+01
    "Si" | -5.441823077333550e+00 | 3.627882051555700e+00 | 2.430715492340000e+01
    "Si" | -1.813941025777850e+00 | 3.627882051555700e+00 | 2.684439934300000e+01
    "Si" | -1.813941025777850e+00 | 0.000000000000000e+00 | 2.933590080400000e+01
    "H"  | -3.986894340452850e+00 | 0.000000000000000e+00 | 3.108956374400000e+01
    "H"  | 3.590122888971500e-01  | 0.000000000000000e+00 | 3.108956374400000e+01
    %
    """
    return input


def test_parse_oct_input_string(struct_input):
    input = parse_oct_input(struct_input)
    input = evaluate_expressions(input, 'LatticeParameters', {'sqrt': sympy.sqrt})
    print(input)
    atoms = parse_oct_structure_to_atoms(input)
    # from ase.visualize import view
    # view(atoms)
    # print(ase_atoms_to_oct_structure(atoms))


def test_write_octopus_input():
    options = {'PeriodicDimensions': 2.0,
               'BoxShape': 'parallelepiped',
               'KPointsUseSymmetries': 'no',
               'LatticeVectors': [[1.0, 0.0, 0.0], [0.0, 1.0, 0.0], [0.0, 0.0, 10.0]],
               'LatticeParameters': [7.25576410311140, 7.25576410311140, 10.2612],
               'Spacing': [0.45, 0.45, 0.35],
               'KPointsGrid': [2.0, 2.0, 1.0],
               'Coordinates': [['H', -7.61477639200855, 0.0, -31.089563744],
                               ['H', -3.26886976265855, 0.0, -31.089563744],
                               ['Si', -5.44182307733355, 0.0, -29.335900804]]
               }

    print(write_octopus_input(options))
